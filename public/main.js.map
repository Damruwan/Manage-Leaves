{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-post/add-post.component.css","webpack:///./src/app/components/add-post/add-post.component.html","webpack:///./src/app/components/add-post/add-post.component.ts","webpack:///./src/app/components/grant-access/grant-access.component.css","webpack:///./src/app/components/grant-access/grant-access.component.html","webpack:///./src/app/components/grant-access/grant-access.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/leave-history/leave-history.component.css","webpack:///./src/app/components/leave-history/leave-history.component.html","webpack:///./src/app/components/leave-history/leave-history.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/manage-leaves/manage-leaves.component.css","webpack:///./src/app/components/manage-leaves/manage-leaves.component.html","webpack:///./src/app/components/manage-leaves/manage-leaves.component.ts","webpack:///./src/app/components/manage-users/manage-users.component.css","webpack:///./src/app/components/manage-users/manage-users.component.html","webpack:///./src/app/components/manage-users/manage-users.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/report-genaration/report-genaration.component.css","webpack:///./src/app/components/report-genaration/report-genaration.component.html","webpack:///./src/app/components/report-genaration/report-genaration.component.ts","webpack:///./src/app/components/request-leaves/request-leaves.component.css","webpack:///./src/app/components/request-leaves/request-leaves.component.html","webpack:///./src/app/components/request-leaves/request-leaves.component.ts","webpack:///./src/app/components/view-user/view-user.component.css","webpack:///./src/app/components/view-user/view-user.component.html","webpack:///./src/app/components/view-user/view-user.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/request.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<flash-messages></flash-messages>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule,Routes } from '@angular/router';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\nimport { AuthService } from './services/auth.service';\n\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ManageUsersComponent } from './components/manage-users/manage-users.component';\nimport { ManageLeavesComponent } from './components/manage-leaves/manage-leaves.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { RequestLeavesComponent } from './components/request-leaves/request-leaves.component';\nimport { LeaveHistoryComponent } from './components/leave-history/leave-history.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { ReportGenarationComponent } from './components/report-genaration/report-genaration.component';\nimport { GrantAccessComponent } from './components/grant-access/grant-access.component';\nimport { ViewUserComponent } from './components/view-user/view-user.component';\n\n\n\n\nconst applicationRoutes:Routes = [\n    \n    {path:'login',component:LoginComponent},\n    {path:'manageUsers',component:ManageUsersComponent},\n    {path:'profile',component:ProfileComponent},\n    {path:'home',component:HomeComponent},\n    {path:'requestLeaves',component:RequestLeavesComponent},\n    {path:'leaveHistory',component:LeaveHistoryComponent},\n    {path:'addPost',component:AddPostComponent},\n    {path:'reportGenaration',component:ReportGenarationComponent},\n    {path:'manageLeaves',component:ManageLeavesComponent},\n    {path:'grantAccess',component:GrantAccessComponent},\n    {path:'viewUser',component:ViewUserComponent}\n   \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    ProfileComponent,\n    ManageUsersComponent,\n    ManageLeavesComponent,\n    HomeComponent,\n    RequestLeavesComponent,\n    LeaveHistoryComponent,\n    AddPostComponent,\n    ReportGenarationComponent,\n    GrantAccessComponent,\n    ViewUserComponent,\n    \n \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(applicationRoutes),\n    FlashMessagesModule\n    \n  ],\n  providers: [AuthService, FlashMessagesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  add-post works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  grant-access works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grant-access',\n  templateUrl: './grant-access.component.html',\n  styleUrls: ['./grant-access.component.css']\n})\nexport class GrantAccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\\n \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  leave-history works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-history',\n  templateUrl: './leave-history.component.html',\n  styleUrls: ['./leave-history.component.css']\n})\nexport class LeaveHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\">Login</h2>\\n\\t<form (submit) = \\\"loginUser()\\\">\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Email</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"email\\\" name =\\\"email\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Password</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"password\\\" name =\\\"password\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Login\\\">\\n\\t</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email:String;\n  password:String;\n\n  constructor(\n     private authService:AuthService,\n     private flashMessage:FlashMessagesService,\n     private router:Router\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n\t  loginUser(){\n\n\t    const user = {\n\t       email:this.email,\n\t       password:this.password\n\t    };\n\n        this.authService.loginUser(user).subscribe(res=>{\n\n           if(res.state) {\n             this.authService.storeData(res.token, res.name, res.level,res.email,res.post);\n             this.flashMessage.show(\"You're Loggedin\" , { cssClass: 'alert-success', times:3000});\n             this.router.navigate(['/profile']);\n             \n          }else {\n             this.flashMessage.show(res.msg , { cssClass: 'alert-danger', times:3000});\n             this.router.navigate(['/login']);\n          }\n\n        })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>All Requested Leaves</h2>\\n<br><br>\\n\\t<div *ngFor = \\\"let request of requests\\\">\\n\\t\\t<div class = \\\"col-md-1\\\">\\n\\t\\t\\t{{request.name}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-1\\\">\\n\\t\\t\\t{{request.post}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t{{request.date}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t{{request.reason}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{request.describe}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-1\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"viewUser(request.email)\\\" value= \\\"History\\\" class =\\\"btn btn-success\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-1\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"acceptRequest(request)\\\" value= \\\"Accept\\\" class =\\\"btn btn-success\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-1\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"deleteRequest(request)\\\" value= \\\"Cancel\\\" class =\\\"btn btn-danger\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from '../../services/request.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AllRequests } from '../../services/allRequest';\nimport { Router, NavigationExtras } from \"@angular/router\";\n\n\n\n\n@Component({\n  selector: 'app-manage-leaves',\n  templateUrl: './manage-leaves.component.html',\n  styleUrls: ['./manage-leaves.component.css']\n})\nexport class ManageLeavesComponent implements OnInit {\n\n  requests: AllRequests[];\n  user: any;\n  id: any;\n\n  constructor(\n      private requestService:RequestService,\n      private flashMessage:FlashMessagesService,\n      private router:Router\n  ) {}\n\n  ngOnInit() {\n       this.requestService.getAllRequest().subscribe(request=>{\n          this.requests = request;\n\n       })\n  }\n\n  acceptRequest(request:any)\n  {\n    this.user = request;\n    this.id = request._id;\n    this.requestService.acceptRequest(this.user).subscribe(res=>{\n        if(res.state) {\n            var requests = this.requests;\n            this.requestService.deleteRequest(this.id).subscribe(data =>{\n\t            if(data.n==1)\n\t            {\n\t              for(var i =0; i< requests.length; i++)\n\t              {\n\t                if(requests[i]._id == this.id)\n\t                {\n\t                   requests.splice(i,1);\n\t                }\n\t              }\n\t            }\n            })\n            this.flashMessage.show(\"Accepted Successfuly\" , { cssClass: 'alert-success', times:3000});\n            this.router.navigate(['/manageLeaves']);\n       }else {\n            this.flashMessage.show(\"Something Went Wrong\" , { cssClass: 'alert-danger', times:3000});\n            this.router.navigate(['/manageLeaves']);\n       } \n    }); \n  }\n\n\n  deleteRequest(request:any)\n  {\n    this.user = request;\n    this.id = request._id;\n    this.requestService.notacceptRequest(this.user).subscribe(res=>{\n        if(res.state) {\n\t\t    var requests = this.requests;\n            this.requestService.deleteRequest(this.id).subscribe(data =>{\n\t            if(data.n==1)\n\t            {\n\t              for(var i =0; i< requests.length; i++)\n\t              {\n\t                if(requests[i]._id == this.id)\n\t                {\n\t                   requests.splice(i,1);\n\t                }\n\t              }\n\t            }\n            })\n            this.flashMessage.show(\"Not Accepted \" , { cssClass: 'alert-success', times:3000});\n            this.router.navigate(['/manageLeaves']);\n        }else {\n            this.flashMessage.show(\"Something Went Wrong\" , { cssClass: 'alert-danger', times:3000});\n            this.router.navigate(['/manageLeaves']);\n        } \n    });   \n  }\n\n  viewUser(email:any){\n       let navigationExtras: NavigationExtras = {\n            queryParams: {\n                \"email\": email\n            }\n        };\n        this.router.navigate([\"/viewUser\"], navigationExtras);  \n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\"> Register User</h2>\\n\\t<form (submit) = \\\"registerData()\\\">\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"full_name\\\" name =\\\"full_name\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Post</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"post\\\" name =\\\"post\\\" class = \\\"form-control\\\">\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Phone No.</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"phone\\\" name =\\\"phone\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Username</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"username\\\" name =\\\"username\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Email</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"email\\\" name =\\\"email\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Password</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"password\\\" name =\\\"password\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>State</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"state\\\" name =\\\"state\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Submit\\\">\\n\\t</form>\\n</div>\\n<hr>\\n<div class = \\\"container\\\">\\n\\t<div *ngFor = \\\"let user of users\\\">\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{user.full_name}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{user.post}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{user.phone}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"deleteUser(user._id)\\\" value= \\\"Delete\\\" class =\\\"btn btn-danger\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { Users } from '../../services/user';\n\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css']\n})\nexport class ManageUsersComponent implements OnInit {\n\nusers: Users[];\n  \n  full_name:String;\n  post:String;\n  phone:String;\n  username:String;\n  email:String;\n  password:String;\n  state:String;\n\n  constructor(\n\n      private authService:AuthService,\n      private flashMessage:FlashMessagesService,\n      private router:Router\n\n  ) { }\n\n  ngOnInit() {\n\n     this.authService.getUser().subscribe(user=>{\n          this.users = user;\n\n       })\n  }\n\n   registerData(){\n    \n    const user = {\n       full_name:this.full_name,\n       post:this.post,\n       phone:this.phone,\n       username:this.username,\n       email:this.email,\n       password:this.password,\n       state:this.state\n    };\n\n    this.authService.registerUser(user).subscribe(user=>{\n         this.users.push(user);\n         this.authService.getUser().subscribe(user=>{\n             this.users = user;\n         }); \n    });   \n  \n  }\n\n  deleteUser(id:any)\n  {\n    var user = this.users;\n    this.authService.deleteUser(id).subscribe(data =>{\n            if(data.n==1)\n            {\n              for(var i =0; i< user.length; i++)\n              {\n                if(user[i]._id == id)\n                {\n                   user.splice(i,1);\n                }\n              }\n            }\n        })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">UCSC</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a [routerLink]=\\\"['/home']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a></li>\\n        <li><a href=\\\"#\\\">About</a></li>\\n      </ul>\\n      \\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li *ngIf=\\\"!authService.loggedIn()\\\"><a [routerLink]=\\\"['/login']\\\">Login</a></li>\\n\\n        <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Hello {{user.getAuthName()}} <span class=\\\"caret\\\"></span></a>\\n        \\n          <ul class=\\\"dropdown-menu\\\">\\n            <li *ngIf=\\\"authService.isStaff() || authService.isAdmin() || authService.isHead()\\\"><a [routerLink]=\\\"['/profile']\\\">Profile</a></li>\\n            <li *ngIf=\\\"authService.isStaff() || authService.isAdmin()\\\"><a [routerLink]=\\\"['/requestLeaves']\\\">Request Leaves</a></li>\\n            <li *ngIf=\\\"authService.isStaff() || authService.isAdmin()\\\"><a [routerLink]=\\\"['/leaveHistory']\\\">History of Leaves</a></li>\\n            <li *ngIf=\\\"authService.isHead() || authService.isAdmin()\\\"><a [routerLink]=\\\"['/manageUsers']\\\">Manage Users</a></li>\\n            <li *ngIf=\\\"authService.isHead() || authService.isAdmin()\\\"><a [routerLink]=\\\"['/addPost']\\\">Add Post</a></li>\\n            <li *ngIf=\\\"authService.isAdmin()\\\"><a [routerLink]=\\\"['/reportGenaration']\\\">Report Genaration</a></li>\\n            <li *ngIf=\\\"authService.isHead()\\\"><a [routerLink]=\\\"['/manageLeaves']\\\">Manage Leaves</a></li>\\n            <li *ngIf=\\\"authService.isHead()\\\"><a [routerLink]=\\\"['/grantAccess']\\\">Grant Access</a></li>\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n            <li><a href=\\\"#\\\" (click)=\\\"logoutUser()\\\">Logout</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n \n  constructor(\n     private router:Router,\n     private authService:AuthService,\n     private flashMessage:FlashMessagesService,\n     public user:AuthService\n\n  ) { }\n\n  ngOnInit() {\n \n  }\n\n\n  logoutUser(){\n     \n     this.authService.logout();\n     this.flashMessage.show(\"You're Logged out\" , { cssClass: 'alert-success', times:3000});\n     this.router.navigate(['']);\n     return false;\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n\\t{{user.full_name}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:any;\n\n  constructor(\n      private authService:AuthService\n  ) { }\n\n  ngOnInit() {\n\n     this.authService.getProfile().subscribe(res=>{\n\n         this.user = res.user;\n\n     })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  report-genaration works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report-genaration',\n  templateUrl: './report-genaration.component.html',\n  styleUrls: ['./report-genaration.component.css']\n})\nexport class ReportGenarationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2 class = \\\"page-header\\\"> Request Leaves</h2>\\n\\t<form (submit) = \\\"request()\\\">\\n\\t\\t\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Date</label>\\n\\t\\t\\t<input type=\\\"date\\\" [(ngModel)] = \\\"date\\\" name =\\\"date\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>Reason</label>\\n\\t\\t\\t<input type=\\\"text\\\" [(ngModel)] = \\\"reason\\\" name =\\\"reason\\\" class = \\\"form-control\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class = \\\"form-group\\\">\\n\\t\\t\\t<label>More Text</label><br>\\n\\t\\t\\t<textarea [(ngModel)]='describe' name =\\\"describe\\\" rows=\\\"6\\\" cols=\\\"100\\\"></textarea>\\n\\t\\t</div>\\n\\t\\t<input type=\\\"submit\\\" class =\\\"btn btn-success\\\" value = \\\"Submit\\\">\\n\\t</form>\\n</div>\\n<hr>\\n<div class = \\\"container\\\">\\n\\t<div *ngFor = \\\"let request of requests\\\">\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{request.date}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{request.reason}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{request.describe}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"deleteRequest(request._id)\\\" value= \\\"Delete\\\" class =\\\"btn btn-danger\\\">\\n\\t\\t\\t<br><br>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RequestService } from '../../services/request.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Requests } from '../../services/request';\nimport { AuthService } from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-request-leaves',\n  templateUrl: './request-leaves.component.html',\n  styleUrls: ['./request-leaves.component.css']\n})\nexport class RequestLeavesComponent implements OnInit {\n  \n  requests: Requests[];\n  email = this.authService.getAuthEmail();\n  name = this.authService.getAuthName();\n  post = this.authService.getAuthPost();\n\n  date:Date;\n  reason:String;\n  describe:String;\n\n  constructor(\n      private requestService:RequestService,\n      private authService:AuthService,\n      private flashMessage:FlashMessagesService,\n      private router:Router\n  ) { }\n\n  ngOnInit() {\n  \n     this.requestService.getRequest(this.email).subscribe(request=>{\n          this.requests = request;\n\n       })\n  }\n\n  request(){\n    const request = {\n       name:this.name,\n       post:this.post,\n       email:this.email,\n       date:this.date,\n       reason:this.reason,\n       describe:this.describe\n    };\n    this.requestService.sendRequest(request).subscribe(request=>{\n         this.requests.push(request);\n         this.requestService.getRequest(this.email).subscribe(request=>{\n             this.requests = request;\n         }); \n    }); \n  \n  }\n\n  deleteRequest(id:any)\n  {\n    var request = this.requests;\n    this.requestService.deleteRequest(id).subscribe(data =>{\n            if(data.n==1)\n            {\n              for(var i =0; i< request.length; i++)\n              {\n                if(request[i]._id == id)\n                {\n                   request.splice(i,1);\n                }\n              }\n            }\n     })\n  }\n  \n}\n\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<h2>Leaves History</h2>\\n\\t<br><br>\\n\\t<div *ngFor = \\\"let hry of history\\\">\\n\\t\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t{{hry.date}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t{{hry.reason}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-5\\\">\\n\\t\\t\\t{{hry.describe}}\\n\\t\\t</div>\\n\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t{{hry.state}}\\n\\t\\t</div>\\n\\t\\t<br><br>\\n\\t</div>\\n\\t<br><br>\\n\\t<div class = \\\"col-md-3\\\">\\n\\t\\t\\t<input type=\\\"button\\\" (click) = \\\"redirectBack()\\\" value= \\\"back\\\" class =\\\"btn btn-success\\\">\\n\\t\\t\\t<br><br>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { RequestService } from '../../services/request.service';\nimport { UserHistory } from '../../services/userHistory';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.css']\n})\nexport class ViewUserComponent implements OnInit {\n   \n   history: UserHistory[];\n   public email: string;\n\n  constructor(\n     private route: ActivatedRoute,\n     private requestService: RequestService,\n     private router: Router\n  ) {\n     this.route.queryParams.subscribe(params => {\n            this.email = params[\"email\"];\n        });\n   }\n\n  ngOnInit() {\n     \n     this.requestService.viewHistory(this.email).subscribe(user=>{\n          this.history = user;\n     });\n  }\n\n  redirectBack(){\n     this.router.navigate(['/manageLeaves']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http,Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenIsPresent } from 'ng2-bearer';\nimport { Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user:any;\n  authtoken:any;\n  authname:any;\n  authlevel:any;\n  authemail:any;\n  authpost:any;\n\n  constructor(\n     private http:Http,\n     private router:Router\n     \n  ) { }\n\n  registerUser(user){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/user/manageUsers\",user,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n  loginUser(user){\n     \n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return  this.http.post(\"http://localhost:3000/user/login\",user,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n\n  getProfile(){\n\n     this.fetchToken();\n     let headers = new Headers({\"Authorization\": this.authtoken}) \n     let options = new RequestOptions({ headers: headers}); \n     return this.http.get(\"http://localhost:3000/user/profile\",options).pipe(map(res=>res.json()));\n\n  }\n\n  getUser(){\n\n    return this.http.get('http://localhost:3000/user/manageUsers').pipe(map(res => res.json()));\n  }\n\n\n  deleteUser(id){\n\n    return this.http.delete('http://localhost:3000/user/manageUsers/'+id)\n      .pipe(map(res => res.json()));\n  }\n\n\n  fetchToken(){\n     const token = localStorage.getItem(\"tokenid\");\n     this.authtoken = token;\n\n  }\n\n  fetchName(){\n     const name = localStorage.getItem(\"name\");\n     this.authname = name;\n  }\n\n  fetchLevel(){\n     const level = localStorage.getItem(\"level\");\n     this.authlevel = level;\n  }\n\n  fetchEmail(){\n     const email = localStorage.getItem(\"email\");\n     this.authemail = email;\n  }\n\n  fetchPost(){\n     const post = localStorage.getItem(\"post\");\n     this.authpost = post;\n  }\n\n\n\n\n  storeData(token,name,level,email,post){\n\n     localStorage.setItem(\"tokenid\",token);\n     localStorage.setItem(\"name\",name);\n     localStorage.setItem(\"level\",level);\n     localStorage.setItem(\"email\",email);\n     localStorage.setItem(\"post\",post);\n \n  }\n\n  logout(){\n\n     this.authtoken = null;\n     this.user = null;\n     localStorage.clear();\n\n  }\n\n\n  loggedIn() {\n    this.fetchToken();\n    if(this.authtoken != null ){\n       return true;\n    }\n\n  }\n\n  getAuthName(){\n     this.fetchName();\n     return this.authname;\n  }\n\n  getAuthEmail(){\n     this.fetchEmail();\n     return this.authemail;\n  }\n  \n  getAuthPost(){\n     this.fetchPost();\n     return this.authpost;\n  }\n\n  isHead(){\n     this.fetchLevel();\n     if(this.authlevel == '0'){\n        return true;\n     }  \n  }\n\n  isAdmin(){\n     this.fetchLevel();\n     if(this.authlevel == '1'){\n        return true;\n     }  \n  }\n\n  isStaff(){\n     this.fetchLevel();\n     if(this.authlevel == '2'){\n        return true;\n     }  \n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http,Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor(\n     private http:Http,\n     private router:Router\n\n  ) { }\n\n  sendRequest(request){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/request/manageRequest\",request,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n   getRequest(email){\n\n    return this.http.get('http://localhost:3000/request/manageRequest/'+email).pipe(map(res => res.json()));\n  }\n\n   viewHistory(email){\n\n    return this.http.get('http://localhost:3000/request/viewHistory/'+email).pipe(map(res => res.json()));\n  }\n\n  \n   deleteRequest(id){\n\n    return this.http.delete('http://localhost:3000/request/manageRequest/'+id)\n      .pipe(map(res => res.json()));\n  }\n\n\n   getAllRequest(){\n\n    return this.http.get('http://localhost:3000/request/manageRequest').pipe(map(res => res.json()));\n  }\n\n   acceptRequest(request){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/request/acceptRequest\",request,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n   notacceptRequest(request){\n\n     let headers = new Headers();\n     headers.append('Content-Type','application/json');\n     return this.http.post(\"http://localhost:3000/request/notacceptRequest\",request,{headers:headers}).pipe(map(res=>res.json()));\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}